import{j as e,i as ne,l as re,m as H,e as ie,U as oe,f as W,n as le,o as ce}from"./ui-vendor-BkC7JKse.js";import{u as de,r as b}from"./react-vendor-Bxu37LRh.js";import{s as w,u as me,B as N,C as P,e as O,a as ue,b as he,d as fe}from"./auth-O_ZHyfl3.js";import{B as T}from"./badge-CCDgyR52.js";import{a as y}from"./utils-vendor-BPxHO2rW.js";import{W as $,w as V}from"./whatsappService-D2FDE2Ar.js";import{d as ge}from"./services-DUvvMEkv.js";import"./supabase-vendor-2z3JYExL.js";const q={async getUsersAvailability(t,n){console.log("Getting availability for users:",t,n);const{data:r,error:o}=await w.from("availability").select("*").in("user_id",[t,n]);if(o)throw console.error("Error fetching availability:",o),o;console.log("Raw availability data:",r);const l=[],m=[];return r?.forEach(c=>{const x=ye(c.day);for(let p=c.start_time;p<c.end_time;p++){const D={day:c.day,hour:p,dayIndex:x};c.user_id===t?l.push(D):m.push(D)}}),{user1Availability:l,user2Availability:m}},findOverlappingSlots(t,n){console.log("Finding overlapping slots..."),console.log("User 1 slots:",t.length),console.log("User 2 slots:",n.length);const r=[];return t.forEach(o=>{n.find(m=>o.day===m.day&&o.hour===m.hour)&&r.push(o)}),console.log("Found overlapping slots:",r.length),r},generateSessionOptions(t,n){console.log("Generating session options from",t.length,"overlapping slots");const r=[],o={};return t.forEach(l=>{o[l.day]||(o[l.day]=[]),o[l.day].push(l)}),Object.entries(o).forEach(([l,m])=>{const c=m.sort((x,p)=>x.hour-p.hour);for(let x=0;x<c.length-1;x++){const p=c[x];c[x+1].hour===p.hour+1&&r.push({id:`${l}-${p.hour}`,day:l,hour:p.hour,duration:2,participants:n,dayIndex:p.dayIndex})}}),console.log("Generated",r.length,"session options"),r},createWeeklyPlans(t){console.log("Creating weekly plans from",t.length,"session options");const n=[];for(let r=0;r<t.length;r++)for(let o=r+1;o<t.length;o++){const l=t[r],m=t[o],c=Math.abs(l.dayIndex-m.dayIndex);c>1&&c<6&&n.push({session1:l,session2:m,totalOptions:t.length})}return n.sort((r,o)=>{const l=Math.abs(r.session1.dayIndex-r.session2.dayIndex),m=Math.abs(o.session1.dayIndex-o.session2.dayIndex),c=Math.abs(l-3),x=Math.abs(m-3);return c-x}),console.log("Created",n.length,"weekly plans"),n.slice(0,5)},async findSessionMatches(t,n){try{console.log("Finding session matches for users:",t,n);const{user1Availability:r,user2Availability:o}=await this.getUsersAvailability(t,n),l=this.findOverlappingSlots(r,o);if(l.length===0)return console.log("No overlapping availability found"),[];const m=this.generateSessionOptions(l,[t,n]);if(m.length<2)return console.log("Not enough session options for weekly plan"),[];const c=this.createWeeklyPlans(m);return console.log("Found",c.length,"weekly session plans"),c}catch(r){throw console.error("Error finding session matches:",r),r}}};function ye(t){return["monday","tuesday","wednesday","thursday","friday","saturday","sunday"].indexOf(t.toLowerCase())}function X(t){return t===0?"12:00 AM":t===12?"12:00 PM":t<12?`${t}:00 AM`:`${t-12}:00 PM`}function J(t){const n=X(t.hour),r=X(t.hour+t.duration);return`${t.day} ${n} - ${r}`}function Ce(){const{user:t,profile:n}=me(),r=de(),[o,l]=b.useState(!0),[m,c]=b.useState([]),[x,p]=b.useState(null),[D,B]=b.useState(!1),[k,Q]=b.useState([]),[R,G]=b.useState(null),[_,E]=b.useState("suggestions");b.useEffect(()=>{t&&(z(),L())},[t]);const I=async(s,a,d)=>{try{if(n?.preferences?.notifications?.whatsapp&&n?.phoneNumber){const i=a(...d);V.sendMessage(n.phoneNumber,i)}if(s?.phone_number&&s?.preferences?.notifications?.whatsapp){const i=a(...d);V.sendMessage(s.phone_number,i)}}catch(i){console.error("Error sending WhatsApp notification:",i)}},L=async()=>{if(t)try{const{data:s,error:a}=await w.from("sessions").select("*").eq("status","confirmed").contains("participants",[t.id]).order("date",{ascending:!0});if(a)throw a;const d=s?.map(i=>({id:i.id,participants:i.participants,date:new Date(i.date),startTime:i.start_time,endTime:i.end_time,status:i.status,createdAt:new Date(i.created_at)}))||[];Q(d),d.length>0&&E("confirmed")}catch(s){console.error("Error loading confirmed sessions:",s),y.error("Failed to load confirmed sessions")}},z=async()=>{if(t)try{l(!0),console.log("Finding session matches...");const{data:s,error:a}=await w.from("availability").select("*").eq("user_id",t.id);if(a)throw console.error("Error loading current user availability:",a),a;if(console.log("Current user availability data:",s),!s||s.length===0){console.log("Current user has not set availability"),c([]),y.info("Please set your availability first before finding sessions!");return}const{data:d,error:i}=await w.from("users").select("id, email, name").neq("id",t.id);if(i)throw console.error("Error loading other users:",i),i;if(console.log("Other users found:",d?.length||0),!d||d.length===0){console.log("No partner has joined the app yet"),c([]),y.info("Youssef hasn't joined the app yet! Once he creates his account and sets his availability, you'll be able to find matching sessions.");return}const u=d[0].id,{data:h,error:f}=await w.from("availability").select("*").eq("user_id",u);if(f)throw console.error("Error loading partner availability:",f),f;if(console.log("Partner availability data:",h),!h||h.length===0){console.log("Partner has not set availability"),c([]),y.info("Youssef hasn't set his availability yet! Once he does, you'll be able to find matching sessions.");return}const v=[];s?.forEach(g=>{const M=K(g.day);for(let C=g.start_time;C<g.end_time;C++)v.push({day:g.day,hour:C,dayIndex:M})});const j=[];h?.forEach(g=>{const M=K(g.day);for(let C=g.start_time;C<g.end_time;C++)j.push({day:g.day,hour:C,dayIndex:M})}),console.log("Current user slots:",v.length),console.log("Partner slots:",j.length);const S=q.findOverlappingSlots(v,j);if(S.length===0){console.log("No overlapping availability found"),c([]),y.info("No matching time slots found! Try updating your availability to overlap with your partner's schedule.");return}const F=q.generateSessionOptions(S,[t.id,u]);if(F.length<2){console.log("Not enough session options for weekly plan"),c([]),y.info("Found some matching times, but not enough for a full weekly plan. Try adding more availability!");return}const A=q.createWeeklyPlans(F);if(c(A),A.length===0)y.info("No optimal weekly plans found. Try adjusting your availability times.");else{y.success(`Found ${A.length} workout schedule options!`);const{data:g}=await w.from("users").select("*").eq("id",u).single();g&&await I(g,$.AVAILABILITY_READY,[g.name||"Your partner"])}}catch(s){console.error("Error finding session matches:",s),y.error("Failed to find session matches")}finally{l(!1)}},Z=async s=>{if(t){B(!0);try{const{data:a,error:d}=await w.from("users").select("id").neq("id",t.id).limit(1);if(d||!a||a.length===0){y.error("Cannot find your gym partner. Make sure they have created an account.");return}const i=a[0].id,{data:u,error:h}=await w.from("users").select("*").eq("id",i).single();h&&console.error("Error getting partner data:",h);const f=[{participants:[t.id,i],date:U(s.session1.dayIndex),start_time:s.session1.hour,end_time:s.session1.hour+s.session1.duration,status:"confirmed"},{participants:[t.id,i],date:U(s.session2.dayIndex),start_time:s.session2.hour,end_time:s.session2.hour+s.session2.duration,status:"confirmed"}],{error:v}=await w.from("sessions").insert(f);if(v)throw v;const j=new Date(U(s.session1.dayIndex)),S=new Date(U(s.session2.dayIndex)),F=j.toLocaleDateString("en-US",{weekday:"long",month:"short",day:"numeric"}),A=S.toLocaleDateString("en-US",{weekday:"long",month:"short",day:"numeric"}),g=Y(s.session1.hour,s.session1.duration),M=Y(s.session2.hour,s.session2.duration);await I(u,$.SESSION_CONFIRMED,[u?.name||"Your partner",F,g]),await I(u,$.SESSION_CONFIRMED,[u?.name||"Your partner",A,M]),y.success("Gym sessions confirmed! ðŸ’ª WhatsApp notifications sent!"),await L(),E("confirmed"),p(null)}catch(a){console.error("Error confirming sessions:",a),y.error("Failed to confirm sessions")}finally{B(!1)}}},ee=async s=>{if(t){G(s);try{const{data:a,error:d}=await w.from("sessions").select("*").eq("id",s).single();if(d)throw d;const i=a.participants.find(v=>v!==t.id),{data:u,error:h}=await w.from("users").select("*").eq("id",i).single();h&&console.error("Error getting partner data:",h);const{error:f}=await w.from("sessions").update({status:"cancelled",updated_at:new Date().toISOString()}).eq("id",s);if(f)throw f;if(a&&u){const j=new Date(a.date).toLocaleDateString("en-US",{weekday:"long",month:"short",day:"numeric"}),S=Y(a.start_time,a.end_time-a.start_time);await I(u,$.SESSION_CANCELLED,[n?.name||"Your partner",j,S])}y.success("Session cancelled. WhatsApp notification sent! ðŸ“±"),await L()}catch(a){console.error("Error cancelling session:",a),y.error("Failed to cancel session")}finally{G(null)}}},se=()=>{const s=n?.email==="ivanaguilarmari@gmail.com";return _==="suggestions"?s?"Here are the best matching times based on your and Youssef's availability. Pick your preferred schedule!":"Here are the best matching times based on your and Ivan's availability. Pick your preferred schedule!":"Your confirmed gym sessions. You can cancel if something comes up."},te=s=>{const a=Math.floor(s.startTime/2),d=s.startTime%2*30,i=Math.floor(s.endTime/2),u=s.endTime%2*30,h=(f,v)=>{const j=f>=12?"PM":"AM";return`${f===0?12:f>12?f-12:f}:${v.toString().padStart(2,"0")} ${j}`};return`${h(a,d)} - ${h(i,u)}`},ae=s=>s.toLocaleDateString("en-US",{weekday:"long",month:"short",day:"numeric"}),Y=(s,a)=>{const d=s+a,i=u=>{const h=u>=12?"PM":"AM";return`${u===0?12:u>12?u-12:u}:00 ${h}`};return`${i(s)} - ${i(d)}`};return o?e.jsx("div",{className:"min-h-screen bg-background flex items-center justify-center",children:e.jsxs("div",{className:"text-center",children:[e.jsx("div",{className:"animate-spin rounded-full h-32 w-32 border-b-2 border-primary mx-auto"}),e.jsx("p",{className:"mt-4 text-muted-foreground",children:"Finding the perfect workout times..."})]})}):e.jsxs("div",{className:"space-y-6",children:[e.jsxs("div",{className:"mb-6",children:[e.jsxs(N,{variant:"ghost",onClick:()=>r("/dashboard"),className:"mb-4",children:[e.jsx(ne,{className:"mr-2 h-4 w-4"}),"Back to Dashboard"]}),e.jsx("h1",{className:"text-2xl sm:text-3xl font-bold",children:"Workout Sessions"}),e.jsx("p",{className:"text-muted-foreground mt-2",children:se()}),e.jsxs("div",{className:"flex flex-wrap gap-2 mt-4",children:[e.jsxs(N,{variant:_==="suggestions"?"default":"outline",onClick:()=>E("suggestions"),className:"flex items-center gap-2",children:[e.jsx(re,{className:"h-4 w-4"}),e.jsx("span",{children:"Find Sessions"}),m.length>0&&e.jsx(T,{variant:"secondary",className:"ml-1",children:m.length})]}),e.jsxs(N,{variant:_==="confirmed"?"default":"outline",onClick:()=>E("confirmed"),className:"flex items-center gap-2",children:[e.jsx(H,{className:"h-4 w-4"}),e.jsx("span",{children:"Confirmed Sessions"}),k.length>0&&e.jsx(T,{variant:"secondary",className:"ml-1",children:k.length})]})]})]}),_==="suggestions"?m.length===0?e.jsx(P,{children:e.jsxs(O,{className:"text-center py-12",children:[e.jsx(ie,{className:"mx-auto h-12 w-12 text-muted-foreground mb-4"}),e.jsx("h3",{className:"text-lg font-semibold mb-2",children:"No Matching Sessions Found"}),e.jsx("p",{className:"text-muted-foreground mb-6",children:"Make sure both you and your partner have set your availability with overlapping time slots."}),e.jsxs("div",{className:"flex flex-col sm:flex-row gap-3 justify-center",children:[e.jsx(N,{onClick:()=>r("/availability"),className:"w-full sm:w-auto",children:"Update Availability"}),e.jsx(N,{variant:"outline",onClick:z,className:"w-full sm:w-auto",children:"Refresh"})]})]})}):e.jsxs("div",{className:"space-y-6",children:[e.jsxs("div",{className:"flex items-center justify-between",children:[e.jsxs("div",{children:[e.jsx("h2",{className:"text-xl font-semibold",children:"Weekly Session Options"}),e.jsxs("p",{className:"text-sm text-muted-foreground",children:["Found ",m.length," optimal workout schedules"]})]}),e.jsx(T,{variant:"secondary",children:"2 sessions per week"})]}),e.jsx("div",{className:"grid gap-6",children:m.map((s,a)=>e.jsxs(P,{className:`cursor-pointer transition-all hover:shadow-md ${x===s?"ring-2 ring-primary":""}`,onClick:()=>p(s),children:[e.jsxs(ue,{children:[e.jsxs("div",{className:"flex items-center justify-between",children:[e.jsxs(he,{className:"flex items-center gap-2",children:[e.jsx(oe,{className:"h-5 w-5"}),"Option ",a+1]}),e.jsx(T,{variant:a===0?"default":"secondary",children:a===0?"Recommended":"Alternative"})]}),e.jsx(fe,{children:"Non-consecutive 2-hour workout sessions"})]}),e.jsxs(O,{children:[e.jsxs("div",{className:"flex flex-col sm:grid sm:grid-cols-2 gap-4",children:[e.jsxs("div",{className:"flex items-center gap-3 p-3 bg-muted rounded-lg",children:[e.jsx(W,{className:"h-4 w-4 text-primary"}),e.jsxs("div",{className:"min-w-0 flex-1",children:[e.jsx("div",{className:"font-medium",children:"Session 1"}),e.jsx("div",{className:"text-sm text-muted-foreground truncate",children:J(s.session1)})]})]}),e.jsxs("div",{className:"flex items-center gap-3 p-3 bg-muted rounded-lg",children:[e.jsx(W,{className:"h-4 w-4 text-primary"}),e.jsxs("div",{className:"min-w-0 flex-1",children:[e.jsx("div",{className:"font-medium",children:"Session 2"}),e.jsx("div",{className:"text-sm text-muted-foreground truncate",children:J(s.session2)})]})]})]}),x===s&&e.jsx("div",{className:"mt-4 pt-4 border-t",children:e.jsx(N,{onClick:()=>Z(s),disabled:D,className:"w-full",children:D?"Confirming...":"Confirm This Schedule ðŸ”¥"})})]})]},a))})]}):k.length===0?e.jsx(P,{children:e.jsxs(O,{className:"text-center py-12",children:[e.jsx(H,{className:"mx-auto h-12 w-12 text-muted-foreground mb-4"}),e.jsx("h3",{className:"text-lg font-semibold mb-2",children:"No Confirmed Sessions"}),e.jsx("p",{className:"text-muted-foreground mb-6",children:`You haven't confirmed any workout sessions yet. Check the "Find Sessions" tab to see available options.`}),e.jsx(N,{onClick:()=>E("suggestions"),className:"w-full sm:w-auto",children:"Find Sessions"})]})}):e.jsxs("div",{className:"space-y-6",children:[e.jsx("div",{className:"flex items-center justify-between",children:e.jsxs("div",{children:[e.jsx("h2",{className:"text-xl font-semibold",children:"Confirmed Sessions"}),e.jsxs("p",{className:"text-sm text-muted-foreground",children:[k.length," upcoming workout",k.length!==1?"s":""]})]})}),e.jsx("div",{className:"grid gap-4",children:k.map(s=>{const a=s.date.toDateString()===new Date().toDateString(),d=s.date<new Date&&!a;return e.jsx(P,{className:d?"opacity-60":"",children:e.jsx(O,{className:"p-4 sm:p-6",children:e.jsxs("div",{className:"flex flex-col sm:flex-row sm:items-center gap-4",children:[e.jsxs("div",{className:"flex items-center gap-4 min-w-0 flex-1",children:[e.jsx("div",{className:"flex items-center justify-center w-12 h-12 bg-primary/10 rounded-full shrink-0",children:e.jsx(W,{className:"h-6 w-6 text-primary"})}),e.jsxs("div",{className:"min-w-0 flex-1",children:[e.jsxs("h3",{className:"font-semibold text-lg",children:[ae(s.date),a&&e.jsx("span",{className:"text-primary ml-2",children:"(Today!)"})]}),e.jsx("p",{className:"text-muted-foreground",children:te(s)})]})]}),e.jsxs("div",{className:"flex flex-col sm:flex-row items-start sm:items-center gap-2 sm:gap-3",children:[e.jsxs(T,{variant:"secondary",className:"flex items-center gap-1 w-fit sm:w-auto justify-center",children:[e.jsx(H,{className:"h-3 w-3"}),"Confirmed"]}),!d&&e.jsxs("div",{className:"flex flex-col sm:flex-row gap-2 w-full sm:w-auto",children:[e.jsxs(N,{variant:"outline",size:"sm",onClick:()=>{const i=n?.email==="ivanaguilarmari@gmail.com"?"Youssef":"Ivan";ge(s,i),y.success("Calendar event downloaded! Open the file to add to your calendar.")},className:"w-full sm:w-auto",children:[e.jsx(le,{className:"h-4 w-4 sm:mr-1"}),e.jsx("span",{className:"hidden sm:inline",children:"Add to Calendar"}),e.jsx("span",{className:"sm:hidden",children:"Calendar"})]}),e.jsx(N,{variant:"outline",size:"sm",onClick:()=>ee(s.id),disabled:R===s.id,className:"text-destructive hover:text-destructive w-full sm:w-auto",children:R===s.id?"Cancelling...":e.jsxs(e.Fragment,{children:[e.jsx(ce,{className:"h-4 w-4 sm:mr-1"}),"Cancel"]})})]})]})]})})},s.id)})})]})]})}function K(t){return["monday","tuesday","wednesday","thursday","friday","saturday","sunday"].indexOf(t.toLowerCase())}function U(t){const n=new Date,r=(n.getDay()+6)%7;let o=t-r;o<=0&&(o+=7);const l=new Date(n);return l.setDate(n.getDate()+o),l.toISOString().split("T")[0]}export{Ce as Sessions};
